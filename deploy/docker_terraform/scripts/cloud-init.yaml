#cloud-config
users:
  - name: deployer
    groups: sudo
    shell: /bin/bash
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    ssh_authorized_keys:
      - ${ssh_public_key}

runcmd:
  # Mise √† jour & outils essentiels
  - apt update && sudo install -y iptables iptables-persistent
  # Config DNS (remplace si besoin)
  - rm /etc/resolv.conf
  - echo "nameserver 8.8.8.8" > /etc/resolv.conf
  - systemctl restart systemd-resolved.service

  # Config iptables simple
  - iptables -F
  - iptables -P INPUT DROP
  - iptables -P FORWARD DROP
  - iptables -P OUTPUT ACCEPT
  - iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
  # Autoriser SSH seulement depuis IP sp√©cifiques
  # suppression du firewall sur les ip sp√©cifiques car les runners github actions ont une trop grande range d'IP
  # - iptables -A INPUT -p tcp -s 185.64.149.28 --dport 22 -j ACCEPT
  # - iptables -A INPUT -p tcp -s 5.49.58.184 --dport 22 -j ACCEPT
  # - iptables -A INPUT -p tcp -s 35.231.145.151 --dport 22 -j ACCEPT
  # - iptables -A INPUT -p tcp -s 35.243.134.228 --dport 22 -j ACCEPT
  - iptables -I INPUT -p tcp --dport 3000 -j ACCEPT
  - iptables -A INPUT -p tcp --dport 22 -j ACCEPT  # üí• SSH ouvert √† tous
  - mkdir -p /etc/iptables
  - iptables-save > /etc/iptables/rules.v4
  - apt update && apt install -y curl python3 python3-pip python3-venv build-essential default-libmysqlclient-dev pkg-config git
  # Installer Node.js 20.x
  - curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
  - apt install -y nodejs

  # Cloner repo et nettoyer sauf backend/frontend
  - su - deployer -c 'git clone https://github.com/Lucas-atabey/cleaverCloudKubePoc.git /home/deployer/myApp/'
  - find myApp -mindepth 1 -maxdepth 1 ! -wholename 'myApp/backend' ! -wholename 'myApp/frontend' -exec rm -rf {} +

  # Backend Python venv et deps
  - su - deployer -c 'python3 -m venv /home/deployer/venv'
  - su - deployer -c '/home/deployer/venv/bin/pip install --upgrade pip'
  - su - deployer -c '/home/deployer/venv/bin/pip install -r /home/deployer/myApp/backend/requirements.txt'

  # Frontend : build React + deps serveur Node
  - su - deployer -c 'cd /home/deployer/myApp/frontend/frontend && npm install && npm run build'
  - su - deployer -c 'cd /home/deployer/myApp/frontend/server && npm install'

  # Copier frontend build vers dossier public serveur Node (adapt√© si besoin)
  - su - deployer -c 'mkdir -p /home/deployer/myApp/frontend/server/public'
  - su - deployer -c 'cp -r /home/deployer/myApp/frontend/frontend/dist/* /home/deployer/myApp/frontend/server/public/'

  # --- Cr√©er le service systemd backend ---
  - |
    cat <<EOF > /etc/systemd/system/backend.service
    [Unit]
    Description=Backend Python App
    After=network.target

    [Service]
    User=deployer
    WorkingDirectory=/home/deployer/myApp/backend
    ExecStart=/home/deployer/venv/bin/python -u app.py
    Restart=always
    Environment=PATH=/home/deployer/venv/bin:/usr/bin:/bin
    Environment=PYTHONUNBUFFERED=1

    [Install]
    WantedBy=multi-user.target
    EOF

  # --- Cr√©er le service systemd frontend ---
  - |
    cat <<EOF > /etc/systemd/system/frontend.service
    [Unit]
    Description=Frontend Node.js Server
    After=network.target

    [Service]
    User=deployer
    WorkingDirectory=/home/deployer/myApp/frontend/server
    ExecStart=/usr/bin/node server.js
    Restart=always
    Environment=NODE_ENV=production

    [Install]
    WantedBy=multi-user.target
    EOF

  # Activer et lancer les services
  - systemctl daemon-reload
  - systemctl enable backend.service
  - systemctl enable frontend.service
  - systemctl start backend.service
  - systemctl start frontend.service

disable_root: true
ssh_pwauth: false
